table fVendas
	lineageTag: 2acd584d-1836-46e7-82bb-ce16077571af

	column Data
		dataType: dateTime
		formatString: Short Date
		lineageTag: ae8ca852-0c69-44eb-bf40-0196be6aea57
		summarizeBy: none
		sourceColumn: Data

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column Valor
		dataType: decimal
		formatString: "R$"\ #,0.###############;-"R$"\ #,0.###############;"R$"\ #,0.###############
		lineageTag: 8569901b-3b3e-4b7b-af09-79a01dc0cd9c
		summarizeBy: sum
		sourceColumn: Valor

		annotation SummarizationSetBy = Automatic

		annotation PBI_FormatHint = {"currencyCulture":"pt-BR"}

	partition fVendas = m
		mode: import
		source =
				let
				    Fonte = Table.FromRows(Json.Document(Binary.Decompress(Binary.FromText("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", BinaryEncoding.Base64), Compression.Deflate)), let _t = ((type nullable text) meta [Serialized.Text = true]) in type table [Data = _t, Valor = _t]),
				    TipoAlterado = Table.TransformColumnTypes(Fonte,{{"Data", type date}, {"Valor", Currency.Type}})
				in
				    TipoAlterado

	annotation PBI_NavigationStepName = Navegação

	annotation PBI_ResultType = Table

